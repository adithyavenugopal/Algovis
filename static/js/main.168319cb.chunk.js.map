{"version":3,"sources":["components/uxcomponents/slider/slider.jsx","components/Algorithms/BubbleSort/bubblesort.jsx","components/Algorithms/Mergesort/mergesort.jsx","components/Algorithms/SelectionSort/selectionsort.jsx","components/layout.js","index.js"],"names":["Slider","props","useState","default","sliderVal","setsliderVal","mouseState","setmouseState","useEffect","isEnabled","onChange","console","log","className","type","min","max","step","value","event","target","onMouseDown","onMouseUp","simGap","normal_bar","selected_bar","wrong_order_bar","correct_bar","final_bar","BubbleSort","setIsEnabled","displayVal","setDisplayVal","reset","setReset","simSpeed","setSimSpeed","simComps","setSimComps","array","setArray","arrayList","setArrayList","trace","setTrace","temp_array","i","push","Math","floor","random","map","idx","style","height","width","length","document","getElementsByClassName","cleanup","arrayComponent_divs","comp1","comp2","tr_case","setTimeout","backgroundColor","newheight1","newheight2","innerHTML","id","val","onClick","temp_trace","j","temp","doBubbleSort","MergeSort","min_idx","doMergeSort","SelectionSort","prev_min","doSelectionSort","Layout","state","app","this","setState","displayed_app","React","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.168319cb.chunk.js","sourcesContent":["import React, {useState,useEffect} from \"react\";\r\nimport \"./slider.css\"\r\n\r\nexport function Slider(props){\r\n\r\n    const [sliderVal,setsliderVal] = useState(props.default);\r\n    const [mouseState,setmouseState] = useState(null);\r\n\r\n    const handleChange = (event) => {\r\n        setsliderVal(event.target.value);\r\n    };\r\n\r\n\r\n    useEffect(()=>{\r\n        if(props.isEnabled){\r\n        if(mouseState === \"up\"){\r\n            props.onChange(sliderVal);\r\n        }\r\n    }\r\n        else{\r\n            console.log(\"Disabled!\");\r\n        }\r\n    });\r\n\r\n    return(\r\n        <div className = \"slidercontainer\">\r\n        <input \r\n            type=\"range\" \r\n            min = {props.min}\r\n            max = {props.max}\r\n            step = {props.step}\r\n            value = {sliderVal}\r\n            onChange = {props.isEnabled? handleChange : () => {console.log(\"disabled\")}}\r\n            onMouseDown={() => setmouseState(\"down\")}\r\n            onMouseUp={() => setmouseState(\"up\")}\r\n        />\r\n        </div>\r\n    );\r\n}","import React, {Component, useState, useEffect} from \"react\";\r\nimport \"../../uxcomponents/uxstyles.css\";\r\nimport {Slider} from \"../../uxcomponents/slider/slider.jsx\"\r\n\r\nconst max_height = 400;\r\nvar simGap = 1000;\r\nconst normal_bar = \"#263238\";\r\nconst selected_bar = \"#37474F\";\r\nconst wrong_order_bar = \"#B71C1C\";\r\nconst correct_bar = \"#43A047\";\r\nconst final_bar = \"#01579B\";\r\n\r\nexport default function BubbleSort(props){\r\n\r\n    const [isEnabled,setIsEnabled] = useState(true);\r\n    const [displayVal,setDisplayVal] = useState(true);\r\n    const [reset,setReset] = useState(true);\r\n    const [simSpeed,setSimSpeed] = useState(1);\r\n    const [simComps,setSimComps] = useState(10);\r\n    const [array, setArray] = useState([]);\r\n    const [arrayList,setArrayList] = useState([]);\r\n    const [trace,setTrace] = useState([]);\r\n\r\n \r\n\r\n    useEffect(() => {\r\n        if(isEnabled)console.log(\"Sim not running!\");\r\n        else console.log(\"sim running!\");\r\n    },[isEnabled])\r\n\r\n    useEffect(() => {\r\n        switch(simSpeed){\r\n            case \"1\":\r\n            default:\r\n                simGap = 1000;\r\n                break;\r\n            case \"2\":\r\n                simGap = 500;\r\n                break;\r\n            case \"3\":\r\n                simGap = 100;\r\n                break;\r\n            case \"4\":\r\n                simGap = 10;\r\n                break;\r\n            case \"5\":\r\n                simGap = 1;\r\n                break;                \r\n        }\r\n        console.log(simGap);\r\n    },[simSpeed]);\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(simComps);\r\n        const temp_array = [];\r\n        for(let i = 0;i<simComps;i++){\r\n            temp_array.push(Math.floor((Math.random() * max_height)+1));\r\n        }\r\n        setArray(temp_array);\r\n        if(simComps >= 40){\r\n            setDisplayVal(false);\r\n        }\r\n        else{\r\n            setDisplayVal(true);\r\n        }\r\n    },[simComps,reset]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setArrayList(array.map((value,idx) => \r\n        <div className = \"arrayComponent\" key = {idx} style = {{height: value/4+\"%\", width: (100/array.length)+\"%\"}}>{displayVal ? value : \"\"}</div>));\r\n        const arrayComponent_divs = document.getElementsByClassName(\"arrayComponent\");\r\n        cleanup();\r\n    },[array,displayVal]);\r\n\r\n\r\n    useEffect(() => {\r\n        const arrayComponent_divs = document.getElementsByClassName(\"arrayComponent\");\r\n        let prev_min = -1;\r\n        for(let i =0; i< trace.length ; i++){\r\n            const [comp1,comp2,tr_case] = trace[i];\r\n            if(tr_case === 1){\r\n            setTimeout(() => {\r\n                arrayComponent_divs[comp1].style.backgroundColor = selected_bar;\r\n                arrayComponent_divs[comp2].style.backgroundColor = selected_bar;\r\n            },i*simGap)\r\n            setTimeout(() => {\r\n                arrayComponent_divs[comp1].style.backgroundColor = normal_bar;\r\n                arrayComponent_divs[comp2].style.backgroundColor = normal_bar;\r\n                console.log((i+1)*simGap);\r\n            },(i+1)*simGap)\r\n            }\r\n            if(tr_case === 2){\r\n                const [newheight1,newheight2] = trace[i+1];\r\n                setTimeout(() => {\r\n                    arrayComponent_divs[comp1].style.backgroundColor = wrong_order_bar;\r\n                    arrayComponent_divs[comp2].style.backgroundColor = wrong_order_bar;\r\n                },i*simGap);\r\n\r\n                setTimeout(() => {\r\n                    arrayComponent_divs[comp1].style.height = newheight1*100/max_height+\"%\";\r\n                    arrayComponent_divs[comp2].style.height = newheight2*100/max_height+\"%\";\r\n                    if(displayVal){\r\n                        arrayComponent_divs[comp1].innerHTML = newheight1;\r\n                        arrayComponent_divs[comp2].innerHTML = newheight2;\r\n                    };\r\n                },(i+1)*simGap);\r\n                i = i+1;\r\n            }\r\n            if(tr_case === 3){\r\n                setTimeout(() => {\r\n                    arrayComponent_divs[comp1].style.backgroundColor = correct_bar;\r\n                    arrayComponent_divs[comp2].style.backgroundColor = correct_bar;\r\n                },i*simGap);\r\n                setTimeout(() => {\r\n                    arrayComponent_divs[comp1].style.backgroundColor = normal_bar;\r\n                    arrayComponent_divs[comp2].style.backgroundColor = normal_bar;\r\n                },(i+1)*simGap);\r\n            }\r\n            if(tr_case === 4){\r\n                setTimeout(() => {\r\n                    arrayComponent_divs[comp1].style.backgroundColor = final_bar;\r\n                    arrayComponent_divs[comp2].style.backgroundColor = final_bar;\r\n                },i*simGap);\r\n            }\r\n        }\r\n        setTimeout(()=>{\r\n            setIsEnabled(true);\r\n        },(trace.length+1)*simGap);\r\n    },[trace]);\r\n\r\n    const cleanup = () => {\r\n        const arrayComponent_divs = document.getElementsByClassName(\"arrayComponent\");\r\n        for(let i = 0;i< arrayComponent_divs.length;i++){\r\n            arrayComponent_divs[i].style.backgroundColor = \"#263238\";\r\n        }\r\n    }\r\n    const doBubbleSort = (array) => {\r\n        cleanup();\r\n        if(!isEnabled)return;\r\n        setIsEnabled(false);\r\n        const temp_trace = [];\r\n        for(let i = 0; i< array.length; i++){\r\n            for(let j = 0;j<array.length-i-1;j++){\r\n                temp_trace.push([j,j+1,1]);\r\n                if(array[j] > array[j+1]){\r\n                    const temp = array[j+1];\r\n                    array[j+1] = array[j];\r\n                    array[j] = temp;\r\n                    temp_trace.push([j,j+1,2]);\r\n                    temp_trace.push([array[j],array[j+1],2]);\r\n                    temp_trace.push([j,j+1,3]);             \r\n                }\r\n            }\r\n            temp_trace.push([array.length-i-1,array.length-i-1,4]);\r\n        }\r\n        console.log(temp_trace.length);\r\n        setTrace(temp_trace);\r\n    };\r\n\r\n\r\n    return(\r\n        <div className = \"appContainer\">\r\n            <div className = \"appScreenContainer\">\r\n                <div className = \"appScreen\">\r\n                    {arrayList};\r\n                </div>\r\n            </div>\r\n            <div className = \"appMenuContainer\">\r\n                <div className = \"appMenuTextBox\" id = \"config\">\r\n                <div className = \"tag\">Config</div>\r\n                    <p>Speed:</p>\r\n                    <Slider \r\n                    onChange = {(val)=>{setSimSpeed(val)}}\r\n                    isEnabled = {isEnabled}\r\n                    min = \"1\"\r\n                    max = \"5\"\r\n                    step = \"1\"\r\n                    default = \"1\"\r\n                    />\r\n                    <p>Number of Components:</p>\r\n                    <Slider \r\n                    onChange = {(val)=>{setSimComps(val)}}\r\n                    isEnabled = {isEnabled}\r\n                    min = \"10\"\r\n                    max = \"100\"\r\n                    step = \"10\"\r\n                    default = \"10\"\r\n                    />\r\n                </div>\r\n                <div className = \"appMenuBarContainer\">\r\n                    <div className = \"appMenuBar\">\r\n                        <div className = \"appMenuBarItem\" onClick = {isEnabled ? () => {doBubbleSort(array)}: console.log(\"disabled!\")}>\r\n                            Start\r\n                        </div>\r\n                        <div className = \"appMenuBarItem\" onClick = {isEnabled ? () => {setReset(!reset)}: console.log(\"disabled\")}>\r\n                            Reset\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className = \"appMenuTextBox\" id = \"info\">\r\n                    <div className = \"tag\">\r\n                        Info.\r\n                    </div>\r\n                    <p>test</p>\r\n                </div>\r\n                \r\n\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}","import React, {Component, useState, useEffect} from \"react\";\r\nimport \"../../uxcomponents/uxstyles.css\";\r\nimport {Slider} from \"../../uxcomponents/slider/slider.jsx\"\r\n\r\n\r\nconst max_height = 400;\r\n\r\nexport default function MergeSort(props){\r\n\r\n    const [isEnabled,setIsEnabled] = useState(true);\r\n    const [displayVal,setDisplayVal] = useState(true);\r\n    const [simSpeed,setSimSpeed] = useState(1);\r\n    const [simComps,setSimComps] = useState(10);\r\n    const [array, setArray] = useState([]);\r\n    const [arrayList,setArrayList] = useState([]);\r\n    const [trace,setTrace] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        if(isEnabled)console.log(\"Sim running!\");\r\n        else console.log(\"sim Not running!\");\r\n    },[isEnabled])\r\n\r\n    useEffect(() => {\r\n        console.log(simComps);\r\n        const temp_array = [];\r\n        console.log(temp_array);\r\n        for(let i = 0;i<simComps;i++){\r\n            temp_array.push(Math.floor((Math.random() * max_height)+1));\r\n        }\r\n        console.log(temp_array.length);\r\n        setArray(temp_array);\r\n        if(simComps >= 40){\r\n            setDisplayVal(false);\r\n        }\r\n        else{\r\n            setDisplayVal(true);\r\n        }\r\n    },[simComps]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setArrayList(array.map((value,idx) => \r\n        <div className = \"arrayComponent\" key = {idx} style = {{height: value/4+\"%\", width: (100/array.length)+\"%\"}}>{displayVal ? value : \"\"}</div>));\r\n    },[array,displayVal]);\r\n\r\n    useEffect(() => {\r\n        const arrayComponent_divs = document.getElementsByClassName(\"arrayComponent\");\r\n        for(let i =0; i< trace.length ; i++){\r\n            const [comp1,comp2,tr_case] = trace[i];\r\n            if(tr_case === 1){\r\n            setTimeout(() => {\r\n                arrayComponent_divs[comp1].style.backgroundColor = \"yellow\";\r\n            },i*10)\r\n            setTimeout(() => {\r\n                arrayComponent_divs[comp1].style.backgroundColor = \"#263238\";\r\n            },(i+1)*10)\r\n            }\r\n            if(tr_case === 3){\r\n                const [newheight1,newheight2,tr_case] = trace[i+1];\r\n                setTimeout(() => {\r\n                    arrayComponent_divs[comp1].style.backgroundColor = \"green\";\r\n                    arrayComponent_divs[comp2].style.backgroundColor = \"green\";\r\n                },i*10)\r\n\r\n                setTimeout(() => {\r\n                    arrayComponent_divs[comp1].style.height = newheight1/4+\"%\";\r\n                    arrayComponent_divs[comp2].style.height = newheight2/4+\"%\";\r\n                },(i+1)*10)\r\n\r\n                setTimeout(() => {\r\n                    arrayComponent_divs[comp1].style.backgroundColor = \"#263238\";\r\n                    arrayComponent_divs[comp2].style.backgroundColor = \"green\";\r\n                },(i+2)*10)\r\n                i = i+1;\r\n            }\r\n        }\r\n    },[trace]);\r\n\r\n    const doMergeSort = (array) => {\r\n        if(!isEnabled) return;\r\n        setIsEnabled(false);\r\n        const temp_trace = [];\r\n        for(let i = 0; i< array.length-1; i++){\r\n            let min_idx = i;\r\n            temp_trace.push([i,i,1]);\r\n            for(let j = i+1;j<array.length;j++){\r\n                if(array[min_idx] > array[j]){\r\n                    min_idx = j;\r\n                }\r\n            temp_trace.push([j,j,1]);\r\n            }\r\n            temp_trace.push([min_idx,min_idx,2]);\r\n            let temp = array[min_idx];\r\n            array[min_idx] = array[i];\r\n            array[i] = temp;\r\n            temp_trace.push([min_idx,i,3]);\r\n            temp_trace.push([array[min_idx],array[i],4]);\r\n        }\r\n        console.log(temp_trace.length)\r\n        setTrace(temp_trace);\r\n    };\r\n\r\n\r\n    return(\r\n        <div className = \"appContainer\">\r\n            <div className = \"appScreenContainer\">\r\n                <div className = \"appScreen\">\r\n                    {arrayList};\r\n                </div>\r\n            </div>\r\n            <div className = \"appMenuContainer\">\r\n                <div className = \"appMenuTextBox\" id = \"config\">\r\n                <div className = \"tag\">Config</div>\r\n                    <p>Speed:</p>\r\n                    <Slider \r\n                    onChange = {(val)=>{setSimSpeed(val)}}\r\n                    isEnabled = {isEnabled}\r\n                    min = \"1\"\r\n                    max = \"5\"\r\n                    step = \"1\"\r\n                    />\r\n                    <p>Number of Components:</p>\r\n                    <Slider \r\n                    onChange = {(val)=>{setSimComps(val)}}\r\n                    isEnabled = {isEnabled}\r\n                    min = \"10\"\r\n                    max = \"100\"\r\n                    step = \"10\"\r\n                    />\r\n                </div>\r\n                <div className = \"appMenuBarContainer\">\r\n                    <div className = \"appMenuBar\">\r\n                        <div className = \"appMenuBarItem\" onClick = {() => {doMergeSort(array)}}>\r\n                            Start\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className = \"appMenuTextBox\">\r\n                    <p>test</p>\r\n                </div>\r\n                \r\n\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}","import React, {Component, useState, useEffect} from \"react\";\r\nimport \"../../uxcomponents/uxstyles.css\";\r\nimport {Slider} from \"../../uxcomponents/slider/slider.jsx\"\r\n\r\n\r\nconst max_height = 400;\r\nvar simGap = 1000;\r\nconst normal_bar = \"#263238\";\r\nconst selected_bar = \"#37474F\";\r\n//const wrong_order_bar = \"#B71C1C\";\r\nconst correct_bar = \"#43A047\";\r\nconst final_bar = \"#01579B\";\r\n\r\nexport default function SelectionSort(props){\r\n\r\n    const [isEnabled,setIsEnabled] = useState(true);\r\n    const [displayVal,setDisplayVal] = useState(true);\r\n    const [reset,setReset] = useState(true);\r\n    const [simSpeed,setSimSpeed] = useState(1);\r\n    const [simComps,setSimComps] = useState(10);\r\n    const [array, setArray] = useState([]);\r\n    const [arrayList,setArrayList] = useState([]);\r\n    const [trace,setTrace] = useState([]);\r\n\r\n\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n        if(isEnabled)console.log(\"Sim not running!\");\r\n        else console.log(\"sim running!\");\r\n    },[isEnabled])\r\n\r\n    useEffect(() => {\r\n        switch(simSpeed){\r\n            case \"1\":\r\n            default:\r\n                simGap = 1000;\r\n                break;\r\n            case \"2\":\r\n                simGap = 500;\r\n                break;\r\n            case \"3\":\r\n                simGap = 100;\r\n                break;\r\n            case \"4\":\r\n                simGap = 10;\r\n                break;\r\n            case \"5\":\r\n                simGap = 1;\r\n                break;                \r\n        }\r\n        console.log(simGap);\r\n    },[simSpeed]);\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(simComps);\r\n        const temp_array = [];\r\n        for(let i = 0;i<simComps;i++){\r\n            temp_array.push(Math.floor((Math.random() * max_height)+1));\r\n        }\r\n        setArray(temp_array);\r\n        if(simComps >= 40){\r\n            setDisplayVal(false);\r\n        }\r\n        else{\r\n            setDisplayVal(true);\r\n        }\r\n    },[simComps,reset]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setArrayList(array.map((value,idx) => \r\n        <div className = \"arrayComponent\" key = {idx} style = {{height: value/4+\"%\", width: (100/array.length)+\"%\"}}>{displayVal ? value : \"\"}</div>));\r\n        const arrayComponent_divs = document.getElementsByClassName(\"arrayComponent\");\r\n        cleanup();\r\n    },[array,displayVal]);\r\n\r\n\r\n    useEffect(() => {\r\n        const arrayComponent_divs = document.getElementsByClassName(\"arrayComponent\");\r\n        let prev_min = -1;\r\n        for(let i =0; i< trace.length ; i++){\r\n            const [comp1,comp2,tr_case] = trace[i];\r\n            if(tr_case === 1){\r\n            setTimeout(() => {\r\n                arrayComponent_divs[comp1].style.backgroundColor = selected_bar;\r\n            },i*simGap)\r\n            setTimeout(() => {\r\n                arrayComponent_divs[comp1].style.backgroundColor = normal_bar;\r\n                console.log((i+1)*simGap);\r\n            },(i+1)*simGap)\r\n            }\r\n            if(tr_case === 2){\r\n            setTimeout(()=>{\r\n                if(comp2 !== -1){\r\n                    arrayComponent_divs[prev_min].style.backgroundColor = normal_bar;\r\n                }\r\n            prev_min = comp1;\r\n            arrayComponent_divs[comp1].style.backgroundColor = correct_bar;\r\n            },(i)*simGap);\r\n            }\r\n\r\n            if(tr_case === 3){\r\n                setTimeout(()=>{\r\n                    arrayComponent_divs[comp1].style.backgroundColor = final_bar;\r\n                },i*simGap);\r\n            }\r\n\r\n            if(tr_case === 4){\r\n                const [newheight1,newheight2] = trace[i+1];\r\n                setTimeout(() => {\r\n                    arrayComponent_divs[comp1].style.backgroundColor = final_bar;\r\n                    arrayComponent_divs[comp2].style.backgroundColor = final_bar;\r\n                },i*simGap);\r\n\r\n                setTimeout(() => {\r\n                    arrayComponent_divs[comp1].style.height = newheight1/4+\"%\";\r\n                    arrayComponent_divs[comp2].style.height = newheight2/4+\"%\";\r\n                    if(displayVal){\r\n                    arrayComponent_divs[comp1].innerHTML = newheight1;\r\n                    arrayComponent_divs[comp2].innerHTML = newheight2;\r\n                    };\r\n                },(i+1)*simGap);\r\n                if(comp1 !== comp2){\r\n                setTimeout(() => {\r\n                    arrayComponent_divs[comp1].style.backgroundColor = normal_bar;\r\n                    arrayComponent_divs[comp2].style.backgroundColor = final_bar;\r\n                },(i+2)*simGap);\r\n                console.log(\"reset!:\"+comp1+\" \"+comp2);\r\n                }\r\n                prev_min = -1;\r\n                console.log(\"resetting prev_min!\"+prev_min);\r\n                i = i+1;\r\n            }\r\n        }\r\n        setTimeout(()=>{\r\n            setIsEnabled(true);\r\n        },(trace.length+1)*simGap);\r\n    },[trace]);\r\n\r\n    const cleanup = () => {\r\n        const arrayComponent_divs = document.getElementsByClassName(\"arrayComponent\");\r\n        for(let i = 0;i< arrayComponent_divs.length;i++){\r\n            arrayComponent_divs[i].style.backgroundColor = \"#263238\";\r\n        }\r\n    }\r\n    const doSelectionSort = (array) => {\r\n        cleanup();\r\n        if(!isEnabled)return;\r\n        setIsEnabled(false);\r\n        const temp_trace = [];\r\n        for(let i = 0; i< array.length-1; i++){\r\n            let min_idx = i;\r\n            temp_trace.push([i,i,1]);\r\n            temp_trace.push([min_idx,-1,2]);\r\n            for(let j = i+1;j<array.length;j++){\r\n                temp_trace.push([j,j,1]);\r\n                if(array[min_idx] > array[j]){\r\n                    min_idx = j;\r\n                    temp_trace.push([min_idx,min_idx,2]);               \r\n                }\r\n            }\r\n            let temp = array[min_idx];\r\n            array[min_idx] = array[i];\r\n            array[i] = temp;\r\n            temp_trace.push([min_idx,i,4]);\r\n            temp_trace.push([array[min_idx],array[i],4]);\r\n        }\r\n        temp_trace.push([array.length-1,array.length-1,3]);\r\n        console.log(temp_trace.length);\r\n        setTrace(temp_trace);\r\n    };\r\n\r\n\r\n    return(\r\n        <div className = \"appContainer\">\r\n            <div className = \"appScreenContainer\">\r\n                <div className = \"appScreen\">\r\n                    {arrayList};\r\n                </div>\r\n            </div>\r\n            <div className = \"appMenuContainer\">\r\n                <div className = \"appMenuTextBox\" id = \"config\">\r\n                <div className = \"tag\">Config</div>\r\n                    <p>Speed:</p>\r\n                    <Slider \r\n                    onChange = {(val)=>{setSimSpeed(val)}}\r\n                    isEnabled = {isEnabled}\r\n                    min = \"1\"\r\n                    max = \"5\"\r\n                    step = \"1\"\r\n                    default = \"1\"\r\n                    />\r\n                    <p>Number of Components:</p>\r\n                    <Slider \r\n                    onChange = {(val)=>{setSimComps(val)}}\r\n                    isEnabled = {isEnabled}\r\n                    min = \"10\"\r\n                    max = \"100\"\r\n                    step = \"10\"\r\n                    default = \"10\"\r\n                    />\r\n                </div>\r\n                <div className = \"appMenuBarContainer\">\r\n                    <div className = \"appMenuBar\">\r\n                        <div className = \"appMenuBarItem\" onClick = {isEnabled ? () => {doSelectionSort(array)}: console.log(\"disabled!\")}>\r\n                            Start\r\n                        </div>\r\n                        <div className = \"appMenuBarItem\" onClick = {isEnabled ? () => {setReset(!reset)}: console.log(\"disabled\")}>\r\n                            Reset\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className = \"appMenuTextBox\" id = \"info\">\r\n                    <div className = \"tag\">\r\n                        Info.\r\n                    </div>\r\n                    <p>test</p>\r\n                </div>\r\n                \r\n\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}","import React from \"react\";\r\nimport BubbleSort from './Algorithms/BubbleSort/bubblesort.jsx';\r\nimport MergeSort from './Algorithms/Mergesort/mergesort.jsx';\r\nimport SelectionSort from './Algorithms/SelectionSort/selectionsort.jsx'\r\nimport './layout.css';\r\n\r\nexport default class Layout extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            app: \"None\"\r\n        };\r\n\r\n    }\r\n\r\n    displayed_app(){\r\n        switch(this.state.app){\r\n            case \"None\":\r\n                return (\r\n                <div>\r\n                    <h1> Please Select an Algorithm from the left sidebar</h1>\r\n                </div>);\r\n            case \"BubbleSort\":\r\n                return (<BubbleSort />);\r\n            case \"MergeSort\":\r\n                return (<MergeSort />);\r\n            case \"SelectionSort\":\r\n                return (<SelectionSort />);\r\n            default:\r\n                return (<></>);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n            <div className = \"mainContainer\">\r\n                <div className = \"topBar\">\r\n                    <h1>AlgoVis</h1>\r\n                </div>\r\n                <div className = \"leftBar\">\r\n                    <div className = \"leftbarItem\" onClick = {() => this.setState({app : \"BubbleSort\"})}>Bubble Sort</div>\r\n                    <div className = \"leftbarItem\" onClick = {() => this.setState({app : \"SelectionSort\"})}>Selection Sort</div>\r\n                    <div className = \"leftbarItem\" onClick = {() => this.setState({app : \"MergeSort\"})}>Merge Sort</div>\r\n\r\n                    <div className = \"leftbarItem\" >PlaceHolder</div>\r\n                    <div className = \"leftbarItem\" >PlaceHolder</div>\r\n                </div>\r\n                <div className = \"midBar\">\r\n                    {this.displayed_app()}\r\n                </div>\r\n                <div className = \"rightBar\">\r\n                </div>\r\n                <div className = \"bottomBar\">\r\n                    \r\n                </div>\r\n            </div>\r\n            </>\r\n\r\n        )\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Layout from './components/layout';\nReactDOM.render(\n  <>\n    <Layout />\n  </>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}